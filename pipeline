pipeline {
	agent any
	options {
		buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
    }
	parameters{
		string(name: 'IDA_URL', defaultValue: params.IDA_URL ?:'https://localhost:8443/ida', description: 'The IDA URL')
		string(name: 'IDA_USERNAME', defaultValue: params.IDA_USERNAME ?:'', description: 'The IDA Login Username')
		password(name: 'IDA_PASSWORD', defaultValue: params.IDA_PASSWORD ?:'', description: 'The IDA Login Password')
		string(name: 'PIPELINE_ID', defaultValue: params.PIPELINE_ID ?:'', description: 'The IDA pipeline Id, at least one of Pipeline Id and Pipeline Name is required.')
		string(name: 'PIPELINE_NAME', defaultValue: params.PIPELINE_NAME ?:'', description: 'The IDA pipeline Name, at least one of Pipeline Id and Pipeline Name is required.')
	}
	
	stages {
	
		stage('Clean Up') {
			steps {
				sh '''
				rm -rf *.html
				'''
			}
		}
		
		stage('Trigger IDA Pipeline') {
			steps {
				script {
					try {
						sh '''
						chmod +x pipeline.sh
						./pipeline.sh -s "${IDA_URL}" -u "${IDA_USERNAME}" -p "${IDA_PASSWORD}" -i "${PIPELINE_ID}" -n "${PIPELINE_NAME}" -o pipeline
						'''
					} catch (e) {
						echo "IDA Pipeline failed"
						throw e
					} finally {
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: 'pipeline.html', reportName: 'IDA Pipeline Report', reportTitles: 'IDA Pipeline Report'])    
					}
				}
			}
		}	
	}
	
}
