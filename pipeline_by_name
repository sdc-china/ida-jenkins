pipeline {
	agent any
	options {
		buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
    }
	parameters{
		string(name: 'IDA_URL', defaultValue: params.IDA_URL ?:'https://localhost:8443/ida', description: 'The IDA URL')
		string(name: 'PIPELINE_NAME', defaultValue: params.PIPELINE_NAME ?:'', description: 'The IDA pipeline Name')
	}
	
	stages {
	
		stage('Preparation') {
			steps {
				checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '2.0-rc']], userRemoteConfigs: [[credentialsId: 'gh-ssh-key', url: 'git@github.com:sdc-china/ida-jenkins.git']]]
				sh '''
				rm -rf *.html
				'''
			}
		}
		
		stage('Trigger IDA Pipeline') {
			steps {
				withCredentials([usernamePassword(credentialsId: 'ida-user', usernameVariable: 'idaUsername', passwordVariable: 'idaPassword')]) {
					script {
						try {
							sh '''chmod +x pipeline_by_name.sh
							./pipeline_by_name.sh "${IDA_URL}" "${PIPELINE_NAME}" "${idaUsername}" "${idaPassword}" pipeline
							'''
						} catch (e) {
							echo "IDA Pipeline failed"
							throw e
						} finally {
							publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: 'pipeline.html', reportName: 'IDA Pipeline Report', reportTitles: 'IDA Pipeline Report'])    
						}
					}
				}
			}
		}	
	}
	
}
