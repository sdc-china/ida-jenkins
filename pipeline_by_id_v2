pipeline {
	agent any
	options {
		buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
    }
	parameters{
		string(name: 'IDA_URL', defaultValue: params.IDA_URL ?:'https://localhost:8443/ida', description: 'The IDA URL')
		string(name: 'IDA_USERNAME', defaultValue: params.IDA_USERNAME ?:'', description: 'The IDA Login Username')
		password(name: 'IDA_PASSWORD', defaultValue: params.IDA_PASSWORD ?:'', description: 'The IDA Login Password')
		string(name: 'PIPELINE_ID', defaultValue: params.PIPELINE_ID ?:'', description: 'The IDA pipeline ID')
	}
	
	stages {
	
		stage('Preparation') {
			steps {
				checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: 'master']], userRemoteConfigs: [[credentialsId: 'gh-ssh-key', url: 'git@github.com:sdc-china/ida-jenkins.git']]]
				sh '''
				rm -rf *.html
				'''
			}
		}
		
		stage('Trigger IDA Pipeline') {
			steps {
				script {
					try {
						sh '''chmod +x pipeline_by_id_v2.sh
						./pipeline_by_id_v2.sh "${IDA_URL}" "${PIPELINE_ID}" "${IDA_USERNAME}" "${IDA_PASSWORD}" pipeline
						'''
					} catch (e) {
						echo "IDA Pipeline failed"
						throw e
					} finally {
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: 'pipeline.html', reportName: 'IDA Pipeline Report', reportTitles: 'IDA Pipeline Report'])    
					}
				}
			}
		}	
	}
	
}
